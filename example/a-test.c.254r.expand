
;; Function add (add, funcdef_no=0, decl_uid=1421, cgraph_uid=1, symbol_order=2)

int add ()
{
  int D.1427;
  int a.0_1;
  int b.1_2;
  int _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  a.0_1 = a;
  b.1_2 = b;
  _4 = a.0_1 + b.1_2;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}



Partition map 

Partition 1 (a.0_1 - 1 )
Partition 2 (b.1_2 - 2 )
Partition 4 (_4 - 4 )
Partition 5 (_5(D) - 5 )


Coalescible Partition map 

Partition 0, base 0 (_5(D) - 5 )


Partition map 

Partition 0 (_5(D) - 5 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (a.0_1 - 1 )
Partition 1 (b.1_2 - 2 )
Partition 2 (_4 - 4 )
Partition 3 (_5(D) - 5 )

int add ()
{
  int D.1427;
  int a.0_1;
  int b.1_2;
  int _4;
  int _5(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  a.0_1 = a;
  b.1_2 = b;
  _4 = a.0_1 + b.1_2;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; a.0_1 = a;

(insn 6 5 0 (set (reg:SI 134 [ a.0_1 ])
        (mem/c:SI (symbol_ref:SI ("a") [flags 0x2]  <var_decl 0x7f8c17260090 a>) [1 a+0 S4 A32])) "test.c":3:12 -1
     (nil))

;; b.1_2 = b;

(insn 7 6 0 (set (reg:SI 135 [ b.1_2 ])
        (mem/c:SI (symbol_ref:SI ("b") [flags 0x2]  <var_decl 0x7f8c17260120 b>) [1 b+0 S4 A32])) "test.c":3:12 -1
     (nil))

;; _4 = a.0_1 + b.1_2;

(insn 8 7 0 (set (reg:SI 136 [ _4 ])
        (plus:SI (reg:SI 134 [ a.0_1 ])
            (reg:SI 135 [ b.1_2 ]))) "test.c":3:12 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 9 8 10 2 (nil) [0 uses])

(note 10 9 0 NOTE_INSN_BASIC_BLOCK)

;; return _4;

(insn 11 10 12 (set (reg:SI 137 [ <retval> ])
        (reg:SI 136 [ _4 ])) "test.c":3:12 -1
     (nil))

(jump_insn 12 11 13 (set (pc)
        (label_ref 0)) "test.c":3:12 -1
     (nil))

(barrier 13 12 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 12.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg:SI 138)
        (reg/f:SI 128 virtual-incoming-args)) "test.c":2:15 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 134 [ a.0_1 ])
        (mem/c:SI (symbol_ref:SI ("a") [flags 0x2]  <var_decl 0x7f8c17260090 a>) [1 a+0 S4 A32])) "test.c":3:12 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 135 [ b.1_2 ])
        (mem/c:SI (symbol_ref:SI ("b") [flags 0x2]  <var_decl 0x7f8c17260120 b>) [1 b+0 S4 A32])) "test.c":3:12 -1
     (nil))
(insn 8 7 11 2 (set (reg:SI 136 [ _4 ])
        (plus:SI (reg:SI 134 [ a.0_1 ])
            (reg:SI 135 [ b.1_2 ]))) "test.c":3:12 -1
     (nil))
(insn 11 8 15 2 (set (reg:SI 137 [ <retval> ])
        (reg:SI 136 [ _4 ])) "test.c":3:12 -1
     (nil))
(insn 15 11 16 2 (set (reg/f/i:SI 8 R8)
        (reg:SI 137 [ <retval> ])) "test.c":4:1 -1
     (nil))
(insn 16 15 0 2 (use (reg/f/i:SI 8 R8)) "test.c":4:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

